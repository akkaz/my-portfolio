{"ast":null,"code":"var _jsxFileName = \"/home/akkaz/Desktop/dev/terminal-portfolio/src/components/Terminal/Terminal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport StreamingText from '../StreamingText';\nimport WindowFrame from '../WindowFrame';\nimport CommandProcessor from '../../services/commandProcessor';\nimport commands from '../../data/commands';\nimport './Terminal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Terminal = () => {\n  _s();\n  const {\n    t,\n    language\n  } = useLanguage();\n  const [history, setHistory] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [hasShownHelp, setHasShownHelp] = useState(false);\n  const terminalRef = useRef(null);\n  const inputRef = useRef(null);\n  const commandProcessor = useRef(new CommandProcessor());\n  useEffect(() => {\n    var _inputRef$current;\n    commandProcessor.current.setCommands(commands);\n    // Initial welcome message\n    setHistory([{\n      id: Date.now(),\n      text: t('welcome'),\n      type: \"system\",\n      streaming: true\n    }]);\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, [language, t]); // Re-run when language changes\n\n  const scrollToBottom = () => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [history]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputValue) return;\n    const command = inputValue.trim().toLowerCase();\n    let result = commandProcessor.current.process(command);\n\n    // If command not found\n    if (!result) {\n      result = {\n        output: t('errors.commandNotFound'),\n        type: 'error'\n      };\n    }\n    if (result.type === 'clear') {\n      setHistory([]);\n      setHasShownHelp(false);\n    } else {\n      const newHistory = [...history, {\n        id: Date.now(),\n        text: inputValue,\n        type: 'prompt'\n      }, {\n        id: Date.now() + 1,\n        text: result.output,\n        type: result.type || 'error',\n        streaming: true\n      }];\n      setHistory(newHistory);\n    }\n    setInputValue('');\n  };\n  const handleWelcomeComplete = () => {\n    if (!hasShownHelp) {\n      const helpResult = commandProcessor.current.process('help');\n      if (helpResult) {\n        setHistory(prev => [...prev, {\n          id: Date.now(),\n          text: helpResult.output,\n          type: helpResult.type,\n          streaming: true\n        }]);\n        setHasShownHelp(true);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WindowFrame, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal\",\n      ref: terminalRef,\n      onClick: () => {\n        var _inputRef$current2;\n        return (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal-content\",\n        children: [history.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `line ${entry.type}`,\n          children: entry.type === 'prompt' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt\",\n            children: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this) : entry.streaming ? /*#__PURE__*/_jsxDEV(StreamingText, {\n            text: entry.text,\n            onComplete: entry.text.includes(\"Welcome to my interactive portfolio\") ? handleWelcomeComplete : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(StreamingText, {\n            text: entry.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this)\n        }, entry.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-line\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-prefix\",\n            children: [t('commandPrompt'), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: inputRef,\n              type: \"text\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter') {\n                  handleSubmit(e);\n                }\n              },\n              spellCheck: \"false\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Terminal, \"8Y4Oc16MpJoSMS+Iyl8kDkDx2QQ=\", false, function () {\n  return [useLanguage];\n});\n_c = Terminal;\nexport default Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLanguage","StreamingText","WindowFrame","CommandProcessor","commands","jsxDEV","_jsxDEV","Terminal","_s","t","language","history","setHistory","inputValue","setInputValue","hasShownHelp","setHasShownHelp","terminalRef","inputRef","commandProcessor","_inputRef$current","current","setCommands","id","Date","now","text","type","streaming","focus","scrollToBottom","scrollTop","scrollHeight","handleSubmit","e","preventDefault","command","trim","toLowerCase","result","process","output","newHistory","handleWelcomeComplete","helpResult","prev","children","className","ref","onClick","_inputRef$current2","map","entry","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","includes","undefined","value","onChange","target","onKeyDown","key","spellCheck","autoFocus","_c","$RefreshReg$"],"sources":["/home/akkaz/Desktop/dev/terminal-portfolio/src/components/Terminal/Terminal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport StreamingText from '../StreamingText';\nimport WindowFrame from '../WindowFrame';\nimport CommandProcessor from '../../services/commandProcessor';\nimport commands from '../../data/commands';\nimport './Terminal.css';\n\nconst Terminal = () => {\n    const { t, language } = useLanguage();\n    const [history, setHistory] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [hasShownHelp, setHasShownHelp] = useState(false);\n    const terminalRef = useRef(null);\n    const inputRef = useRef(null);\n    const commandProcessor = useRef(new CommandProcessor());\n\n    useEffect(() => {\n        commandProcessor.current.setCommands(commands);\n        // Initial welcome message\n        setHistory([\n            {\n                id: Date.now(),\n                text: t('welcome'),\n                type: \"system\",\n                streaming: true,\n            },\n        ]);\n        inputRef.current?.focus();\n    }, [language, t]); // Re-run when language changes\n\n    const scrollToBottom = () => {\n        if (terminalRef.current) {\n            terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n        }\n    };\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [history]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!inputValue) return;\n\n        const command = inputValue.trim().toLowerCase();\n        let result = commandProcessor.current.process(command);\n\n        // If command not found\n        if (!result) {\n            result = {\n                output: t('errors.commandNotFound'),\n                type: 'error'\n            };\n        }\n        \n        if (result.type === 'clear') {\n            setHistory([]);\n            setHasShownHelp(false);\n        } else {\n            const newHistory = [\n                ...history,\n                { id: Date.now(), text: inputValue, type: 'prompt' },\n                { \n                    id: Date.now() + 1, \n                    text: result.output,\n                    type: result.type || 'error',\n                    streaming: true \n                }\n            ];\n            setHistory(newHistory);\n        }\n\n        setInputValue('');\n    };\n\n    const handleWelcomeComplete = () => {\n        if (!hasShownHelp) {\n            const helpResult = commandProcessor.current.process('help');\n            if (helpResult) {\n                setHistory(prev => [...prev, {\n                    id: Date.now(),\n                    text: helpResult.output,\n                    type: helpResult.type,\n                    streaming: true\n                }]);\n                setHasShownHelp(true);\n            }\n        }\n    };\n\n    return (\n        <WindowFrame>\n            <div className=\"terminal\" ref={terminalRef} onClick={() => inputRef.current?.focus()}>\n                <div className=\"terminal-content\">\n                    {history.map(entry => (\n                        <div key={entry.id} className={`line ${entry.type}`}>\n                            {entry.type === 'prompt' ? (\n                                <div className=\"prompt\">{entry.text}</div>\n                            ) : entry.streaming ? (\n                                <StreamingText \n                                    text={entry.text} \n                                    onComplete={\n                                        entry.text.includes(\"Welcome to my interactive portfolio\") \n                                            ? handleWelcomeComplete \n                                            : undefined\n                                    }\n                                />\n                            ) : (\n                                <StreamingText text={entry.text} />\n                            )}\n                        </div>\n                    ))}\n                    <div className=\"input-line\">\n                        <span className=\"input-prefix\">{t('commandPrompt')} </span>\n                        <div className=\"input-wrapper\">\n                            <input\n                                ref={inputRef}\n                                type=\"text\"\n                                value={inputValue}\n                                onChange={(e) => setInputValue(e.target.value)}\n                                onKeyDown={(e) => {\n                                    if (e.key === 'Enter') {\n                                        handleSubmit(e);\n                                    }\n                                }}\n                                spellCheck=\"false\"\n                                autoFocus\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </WindowFrame>\n    );\n};\n\nexport default Terminal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,gBAAgB,MAAM,iCAAiC;AAC9D,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,CAAC;IAAEC;EAAS,CAAC,GAAGV,WAAW,CAAC,CAAC;EACrC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMoB,WAAW,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMmB,QAAQ,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMoB,gBAAgB,GAAGpB,MAAM,CAAC,IAAII,gBAAgB,CAAC,CAAC,CAAC;EAEvDL,SAAS,CAAC,MAAM;IAAA,IAAAsB,iBAAA;IACZD,gBAAgB,CAACE,OAAO,CAACC,WAAW,CAAClB,QAAQ,CAAC;IAC9C;IACAQ,UAAU,CAAC,CACP;MACIW,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEjB,CAAC,CAAC,SAAS,CAAC;MAClBkB,IAAI,EAAE,QAAQ;MACdC,SAAS,EAAE;IACf,CAAC,CACJ,CAAC;IACF,CAAAR,iBAAA,GAAAF,QAAQ,CAACG,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBS,KAAK,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACnB,QAAQ,EAAED,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnB,MAAMqB,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIb,WAAW,CAACI,OAAO,EAAE;MACrBJ,WAAW,CAACI,OAAO,CAACU,SAAS,GAAGd,WAAW,CAACI,OAAO,CAACW,YAAY;IACpE;EACJ,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACZgC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACnB,OAAO,CAAC,CAAC;EAEb,MAAMsB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACtB,UAAU,EAAE;IAEjB,MAAMuB,OAAO,GAAGvB,UAAU,CAACwB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC/C,IAAIC,MAAM,GAAGpB,gBAAgB,CAACE,OAAO,CAACmB,OAAO,CAACJ,OAAO,CAAC;;IAEtD;IACA,IAAI,CAACG,MAAM,EAAE;MACTA,MAAM,GAAG;QACLE,MAAM,EAAEhC,CAAC,CAAC,wBAAwB,CAAC;QACnCkB,IAAI,EAAE;MACV,CAAC;IACL;IAEA,IAAIY,MAAM,CAACZ,IAAI,KAAK,OAAO,EAAE;MACzBf,UAAU,CAAC,EAAE,CAAC;MACdI,eAAe,CAAC,KAAK,CAAC;IAC1B,CAAC,MAAM;MACH,MAAM0B,UAAU,GAAG,CACf,GAAG/B,OAAO,EACV;QAAEY,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEC,IAAI,EAAEb,UAAU;QAAEc,IAAI,EAAE;MAAS,CAAC,EACpD;QACIJ,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC;QAClBC,IAAI,EAAEa,MAAM,CAACE,MAAM;QACnBd,IAAI,EAAEY,MAAM,CAACZ,IAAI,IAAI,OAAO;QAC5BC,SAAS,EAAE;MACf,CAAC,CACJ;MACDhB,UAAU,CAAC8B,UAAU,CAAC;IAC1B;IAEA5B,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAM6B,qBAAqB,GAAGA,CAAA,KAAM;IAChC,IAAI,CAAC5B,YAAY,EAAE;MACf,MAAM6B,UAAU,GAAGzB,gBAAgB,CAACE,OAAO,CAACmB,OAAO,CAAC,MAAM,CAAC;MAC3D,IAAII,UAAU,EAAE;QACZhC,UAAU,CAACiC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UACzBtB,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UACdC,IAAI,EAAEkB,UAAU,CAACH,MAAM;UACvBd,IAAI,EAAEiB,UAAU,CAACjB,IAAI;UACrBC,SAAS,EAAE;QACf,CAAC,CAAC,CAAC;QACHZ,eAAe,CAAC,IAAI,CAAC;MACzB;IACJ;EACJ,CAAC;EAED,oBACIV,OAAA,CAACJ,WAAW;IAAA4C,QAAA,eACRxC,OAAA;MAAKyC,SAAS,EAAC,UAAU;MAACC,GAAG,EAAE/B,WAAY;MAACgC,OAAO,EAAEA,CAAA;QAAA,IAAAC,kBAAA;QAAA,QAAAA,kBAAA,GAAMhC,QAAQ,CAACG,OAAO,cAAA6B,kBAAA,uBAAhBA,kBAAA,CAAkBrB,KAAK,CAAC,CAAC;MAAA,CAAC;MAAAiB,QAAA,eACjFxC,OAAA;QAAKyC,SAAS,EAAC,kBAAkB;QAAAD,QAAA,GAC5BnC,OAAO,CAACwC,GAAG,CAACC,KAAK,iBACd9C,OAAA;UAAoByC,SAAS,EAAE,QAAQK,KAAK,CAACzB,IAAI,EAAG;UAAAmB,QAAA,EAC/CM,KAAK,CAACzB,IAAI,KAAK,QAAQ,gBACpBrB,OAAA;YAAKyC,SAAS,EAAC,QAAQ;YAAAD,QAAA,EAAEM,KAAK,CAAC1B;UAAI;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GAC1CJ,KAAK,CAACxB,SAAS,gBACftB,OAAA,CAACL,aAAa;YACVyB,IAAI,EAAE0B,KAAK,CAAC1B,IAAK;YACjB+B,UAAU,EACNL,KAAK,CAAC1B,IAAI,CAACgC,QAAQ,CAAC,qCAAqC,CAAC,GACpDf,qBAAqB,GACrBgB;UACT;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,gBAEFlD,OAAA,CAACL,aAAa;YAACyB,IAAI,EAAE0B,KAAK,CAAC1B;UAAK;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACrC,GAdKJ,KAAK,CAAC7B,EAAE;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeb,CACR,CAAC,eACFlD,OAAA;UAAKyC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBxC,OAAA;YAAMyC,SAAS,EAAC,cAAc;YAAAD,QAAA,GAAErC,CAAC,CAAC,eAAe,CAAC,EAAC,GAAC;UAAA;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3DlD,OAAA;YAAKyC,SAAS,EAAC,eAAe;YAAAD,QAAA,eAC1BxC,OAAA;cACI0C,GAAG,EAAE9B,QAAS;cACdS,IAAI,EAAC,MAAM;cACXiC,KAAK,EAAE/C,UAAW;cAClBgD,QAAQ,EAAG3B,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE;cAC/CG,SAAS,EAAG7B,CAAC,IAAK;gBACd,IAAIA,CAAC,CAAC8B,GAAG,KAAK,OAAO,EAAE;kBACnB/B,YAAY,CAACC,CAAC,CAAC;gBACnB;cACJ,CAAE;cACF+B,UAAU,EAAC,OAAO;cAClBC,SAAS;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEtB,CAAC;AAAChD,EAAA,CA/HID,QAAQ;EAAA,QACcP,WAAW;AAAA;AAAAmE,EAAA,GADjC5D,QAAQ;AAiId,eAAeA,QAAQ;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}