{"ast":null,"code":"var _jsxFileName = \"/home/akkaz/Desktop/dev/terminal-portfolio/src/components/WindowFrame/WindowFrame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport './WindowFrame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WindowFrame = ({\n  children\n}) => {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  const {\n    language,\n    setLanguage\n  } = useLanguage();\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => {\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, []);\n  const handleHomeClick = () => {\n    // You can implement custom home button behavior here\n    console.log('Home clicked');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-bar-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"home-button\",\n          onClick: handleHomeClick,\n          title: \"Home\",\n          children: \"\\uD83C\\uDFE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `lang-button ${language === 'it' ? 'active' : ''}`,\n            onClick: () => setLanguage('it'),\n            title: \"Italiano\",\n            children: \"\\uD83C\\uDDEE\\uD83C\\uDDF9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `lang-button ${language === 'en' ? 'active' : ''}`,\n            onClick: () => setLanguage('en'),\n            title: \"English\",\n            children: \"\\uD83C\\uDDEC\\uD83C\\uDDE7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title-bar-text\",\n          children: \"portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-bar-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button minimize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button maximize\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), children, !isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resize-handle\",\n      title: \"Resize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(WindowFrame, \"C3TUnGOiE0kdrOsObX6Z0q8qgn8=\", false, function () {\n  return [useLanguage];\n});\n_c = WindowFrame;\nexport default WindowFrame;\nvar _c;\n$RefreshReg$(_c, \"WindowFrame\");","map":{"version":3,"names":["React","useEffect","useState","useLanguage","jsxDEV","_jsxDEV","WindowFrame","children","_s","isMobile","setIsMobile","language","setLanguage","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleHomeClick","console","log","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/akkaz/Desktop/dev/terminal-portfolio/src/components/WindowFrame/WindowFrame.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLanguage } from '../../contexts/LanguageContext';\nimport './WindowFrame.css';\n\nconst WindowFrame = ({ children }) => {\n    const [isMobile, setIsMobile] = useState(false);\n    const { language, setLanguage } = useLanguage();\n\n    useEffect(() => {\n        const checkMobile = () => {\n            setIsMobile(window.innerWidth <= 768);\n        };\n        \n        checkMobile();\n        window.addEventListener('resize', checkMobile);\n        \n        return () => {\n            window.removeEventListener('resize', checkMobile);\n        };\n    }, []);\n    const handleHomeClick = () => {\n        // You can implement custom home button behavior here\n        console.log('Home clicked');\n    };\n\n    return (\n        <div className=\"window\">\n            <div className=\"title-bar\">\n                <div className=\"title-bar-left\">\n                    <button \n                        className=\"home-button\" \n                        onClick={handleHomeClick}\n                        title=\"Home\"\n                    >\n                        üè†\n                    </button>\n                    <div className=\"language-buttons\">\n                        <button \n                            className={`lang-button ${language === 'it' ? 'active' : ''}`}\n                            onClick={() => setLanguage('it')}\n                            title=\"Italiano\"\n                        >\n                            üáÆüáπ\n                        </button>\n                        <button \n                            className={`lang-button ${language === 'en' ? 'active' : ''}`}\n                            onClick={() => setLanguage('en')}\n                            title=\"English\"\n                        >\n                            üá¨üáß\n                        </button>\n                    </div>\n                    <div className=\"title-bar-text\">portfolio</div>\n                </div>\n                <div className=\"title-bar-controls\">\n                    <button className=\"control-button minimize\"></button>\n                    <button className=\"control-button maximize\"></button>\n                    <button className=\"control-button close\"></button>\n                </div>\n            </div>\n            {children}\n            {!isMobile && <div className=\"resize-handle\" title=\"Resize\"/>}\n        </div>\n    );\n};\n\nexport default WindowFrame;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM;IAAES,QAAQ;IAAEC;EAAY,CAAC,GAAGT,WAAW,CAAC,CAAC;EAE/CF,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAGA,CAAA,KAAM;MACtBH,WAAW,CAACI,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC;IACzC,CAAC;IAEDF,WAAW,CAAC,CAAC;IACbC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,WAAW,CAAC;IAE9C,OAAO,MAAM;MACTC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,WAAW,CAAC;IACrD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACAC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC/B,CAAC;EAED,oBACIf,OAAA;IAAKgB,SAAS,EAAC,QAAQ;IAAAd,QAAA,gBACnBF,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAd,QAAA,gBACtBF,OAAA;QAAKgB,SAAS,EAAC,gBAAgB;QAAAd,QAAA,gBAC3BF,OAAA;UACIgB,SAAS,EAAC,aAAa;UACvBC,OAAO,EAAEJ,eAAgB;UACzBK,KAAK,EAAC,MAAM;UAAAhB,QAAA,EACf;QAED;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtB,OAAA;UAAKgB,SAAS,EAAC,kBAAkB;UAAAd,QAAA,gBAC7BF,OAAA;YACIgB,SAAS,EAAE,eAAeV,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;YAC9DW,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,IAAI,CAAE;YACjCW,KAAK,EAAC,UAAU;YAAAhB,QAAA,EACnB;UAED;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTtB,OAAA;YACIgB,SAAS,EAAE,eAAeV,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;YAC9DW,OAAO,EAAEA,CAAA,KAAMV,WAAW,CAAC,IAAI,CAAE;YACjCW,KAAK,EAAC,SAAS;YAAAhB,QAAA,EAClB;UAED;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACNtB,OAAA;UAAKgB,SAAS,EAAC,gBAAgB;UAAAd,QAAA,EAAC;QAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACNtB,OAAA;QAAKgB,SAAS,EAAC,oBAAoB;QAAAd,QAAA,gBAC/BF,OAAA;UAAQgB,SAAS,EAAC;QAAyB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACrDtB,OAAA;UAAQgB,SAAS,EAAC;QAAyB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACrDtB,OAAA;UAAQgB,SAAS,EAAC;QAAsB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACLpB,QAAQ,EACR,CAACE,QAAQ,iBAAIJ,OAAA;MAAKgB,SAAS,EAAC,eAAe;MAACE,KAAK,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEd,CAAC;AAACnB,EAAA,CA5DIF,WAAW;EAAA,QAEqBH,WAAW;AAAA;AAAAyB,EAAA,GAF3CtB,WAAW;AA8DjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}